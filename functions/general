if [[ "$(hostname 2> /dev/null)" == *"EduMart"* ]]; then
  . $ZDOTDIR/functions/work
fi

function dce() {
  docker exec -it $1 bash
}

function dcesh() {
  docker exec -it $1 sh
}


function findFile() {
	find $1 -type f -iname $2 2>&1 | grep -v "Operation not permitted"
}

function findFileInCurrent() {
	findFile . $1
}

function findFileInRoot() {
	findFile ~ $1
}

function removeSubmodule() {
	git submodule deinit -f -- $1
  rm -rf .git/modules/$1
  git rm -f $1
  git unstage .gitmodules
  rm .gitmodules
	rm -rf $1
}

function checkManifest() {
	jar xf $1 META-INF/MANIFEST.MF 2>&1 && cat META-INF/MANIFEST.MF && rm -rf META-INF
}

function sbtTestFile() {
  sbt ~testOnly $1
}

function get_default_branch() {
  git remote show origin | sed -n '/HEAD branch/s/.*: //p'
}

function pull_if_behind() {
  git fetch
  if (git status -uno | grep -q behind); then
    git pull --rebase
  fi
}

function gcom() {
  git co $(get_default_branch) && $(pull_if_behind)
}


function gclean() {
  git for-each-ref --format '%(refname:short)' refs/heads | grep -v "$(get_default_branch)" | xargs git branch -d
}

function gcleanall() {
  git for-each-ref --format '%(refname:short)' refs/heads | grep -v "$(get_default_branch)" | xargs git branch -D
}

function newrepo() {
  git init
  git add .
  git commit -m "first commit"
  git branch -M main
  git remote add origin git@github.com:ed1621/${1}.git
  git push -u origin main
}
 
function ghc_id() {
  ghcid "--command=ghci $1.hs"
}

